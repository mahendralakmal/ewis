/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("/*!\r\n * Bootstrap v3.3.4 (http://getbootstrap.com)\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n */\r\n\r\nif (typeof jQuery === 'undefined') {\r\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery')\r\n}\r\n\r\n+function ($) {\r\n    'use strict';\r\n    var version = $.fn.jquery.split(' ')[0].split('.')\r\n    if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\r\n        throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\r\n    }\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: transition.js v3.3.4\r\n * http://getbootstrap.com/javascript/#transitions\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\r\n    // ============================================================\r\n\r\n    function transitionEnd() {\r\n        var el = document.createElement('bootstrap')\r\n\r\n        var transEndEventNames = {\r\n            WebkitTransition : 'webkitTransitionEnd',\r\n            MozTransition    : 'transitionend',\r\n            OTransition      : 'oTransitionEnd otransitionend',\r\n            transition       : 'transitionend'\r\n        }\r\n\r\n        for (var name in transEndEventNames) {\r\n            if (el.style[name] !== undefined) {\r\n                return { end: transEndEventNames[name] }\r\n            }\r\n        }\r\n\r\n        return false // explicit for ie8 (  ._.)\r\n    }\r\n\r\n    // http://blog.alexmaccaw.com/css-transitions\r\n    $.fn.emulateTransitionEnd = function (duration) {\r\n        var called = false\r\n        var $el = this\r\n        $(this).one('bsTransitionEnd', function () { called = true })\r\n        var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\r\n        setTimeout(callback, duration)\r\n        return this\r\n    }\r\n\r\n    $(function () {\r\n        $.support.transition = transitionEnd()\r\n\r\n        if (!$.support.transition) return\r\n\r\n        $.event.special.bsTransitionEnd = {\r\n            bindType: $.support.transition.end,\r\n            delegateType: $.support.transition.end,\r\n            handle: function (e) {\r\n                if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n            }\r\n        }\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: alert.js v3.3.4\r\n * http://getbootstrap.com/javascript/#alerts\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // ALERT CLASS DEFINITION\r\n    // ======================\r\n\r\n    var dismiss = '[data-dismiss=\"alert\"]'\r\n    var Alert   = function (el) {\r\n        $(el).on('click', dismiss, this.close)\r\n    }\r\n\r\n    Alert.VERSION = '3.3.4'\r\n\r\n    Alert.TRANSITION_DURATION = 150\r\n\r\n    Alert.prototype.close = function (e) {\r\n        var $this    = $(this)\r\n        var selector = $this.attr('data-target')\r\n\r\n        if (!selector) {\r\n            selector = $this.attr('href')\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n        }\r\n\r\n        var $parent = $(selector)\r\n\r\n        if (e) e.preventDefault()\r\n\r\n        if (!$parent.length) {\r\n            $parent = $this.closest('.alert')\r\n        }\r\n\r\n        $parent.trigger(e = $.Event('close.bs.alert'))\r\n\r\n        if (e.isDefaultPrevented()) return\r\n\r\n        $parent.removeClass('in')\r\n\r\n        function removeElement() {\r\n            // detach from parent, fire event then clean up data\r\n            $parent.detach().trigger('closed.bs.alert').remove()\r\n        }\r\n\r\n        $.support.transition && $parent.hasClass('fade') ?\r\n            $parent\r\n                .one('bsTransitionEnd', removeElement)\r\n                .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\r\n            removeElement()\r\n    }\r\n\r\n\r\n    // ALERT PLUGIN DEFINITION\r\n    // =======================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this = $(this)\r\n            var data  = $this.data('bs.alert')\r\n\r\n            if (!data) $this.data('bs.alert', (data = new Alert(this)))\r\n            if (typeof option == 'string') data[option].call($this)\r\n        })\r\n    }\r\n\r\n    var old = $.fn.alert\r\n\r\n    $.fn.alert             = Plugin\r\n    $.fn.alert.Constructor = Alert\r\n\r\n\r\n    // ALERT NO CONFLICT\r\n    // =================\r\n\r\n    $.fn.alert.noConflict = function () {\r\n        $.fn.alert = old\r\n        return this\r\n    }\r\n\r\n\r\n    // ALERT DATA-API\r\n    // ==============\r\n\r\n    $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: button.js v3.3.4\r\n * http://getbootstrap.com/javascript/#buttons\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // BUTTON PUBLIC CLASS DEFINITION\r\n    // ==============================\r\n\r\n    var Button = function (element, options) {\r\n        this.$element  = $(element)\r\n        this.options   = $.extend({}, Button.DEFAULTS, options)\r\n        this.isLoading = false\r\n    }\r\n\r\n    Button.VERSION  = '3.3.4'\r\n\r\n    Button.DEFAULTS = {\r\n        loadingText: 'loading...'\r\n    }\r\n\r\n    Button.prototype.setState = function (state) {\r\n        var d    = 'disabled'\r\n        var $el  = this.$element\r\n        var val  = $el.is('input') ? 'val' : 'html'\r\n        var data = $el.data()\r\n\r\n        state = state + 'Text'\r\n\r\n        if (data.resetText == null) $el.data('resetText', $el[val]())\r\n\r\n        // push to event loop to allow forms to submit\r\n        setTimeout($.proxy(function () {\r\n            $el[val](data[state] == null ? this.options[state] : data[state])\r\n\r\n            if (state == 'loadingText') {\r\n                this.isLoading = true\r\n                $el.addClass(d).attr(d, d)\r\n            } else if (this.isLoading) {\r\n                this.isLoading = false\r\n                $el.removeClass(d).removeAttr(d)\r\n            }\r\n        }, this), 0)\r\n    }\r\n\r\n    Button.prototype.toggle = function () {\r\n        var changed = true\r\n        var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\r\n\r\n        if ($parent.length) {\r\n            var $input = this.$element.find('input')\r\n            if ($input.prop('type') == 'radio') {\r\n                if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\r\n                else $parent.find('.active').removeClass('active')\r\n            }\r\n            if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\r\n        } else {\r\n            this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\r\n        }\r\n\r\n        if (changed) this.$element.toggleClass('active')\r\n    }\r\n\r\n\r\n    // BUTTON PLUGIN DEFINITION\r\n    // ========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.button')\r\n            var options = typeof option == 'object' && option\r\n\r\n            if (!data) $this.data('bs.button', (data = new Button(this, options)))\r\n\r\n            if (option == 'toggle') data.toggle()\r\n            else if (option) data.setState(option)\r\n        })\r\n    }\r\n\r\n    var old = $.fn.button\r\n\r\n    $.fn.button             = Plugin\r\n    $.fn.button.Constructor = Button\r\n\r\n\r\n    // BUTTON NO CONFLICT\r\n    // ==================\r\n\r\n    $.fn.button.noConflict = function () {\r\n        $.fn.button = old\r\n        return this\r\n    }\r\n\r\n\r\n    // BUTTON DATA-API\r\n    // ===============\r\n\r\n    $(document)\r\n        .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n            var $btn = $(e.target)\r\n            if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\r\n            Plugin.call($btn, 'toggle')\r\n            e.preventDefault()\r\n        })\r\n        .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n            $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\r\n        })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: carousel.js v3.3.4\r\n * http://getbootstrap.com/javascript/#carousel\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // CAROUSEL CLASS DEFINITION\r\n    // =========================\r\n\r\n    var Carousel = function (element, options) {\r\n        this.$element    = $(element)\r\n        this.$indicators = this.$element.find('.carousel-indicators')\r\n        this.options     = options\r\n        this.paused      = null\r\n        this.sliding     = null\r\n        this.interval    = null\r\n        this.$active     = null\r\n        this.$items      = null\r\n\r\n        this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\r\n\r\n        this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\r\n            .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\r\n            .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\r\n    }\r\n\r\n    Carousel.VERSION  = '3.3.4'\r\n\r\n    Carousel.TRANSITION_DURATION = 600\r\n\r\n    Carousel.DEFAULTS = {\r\n        interval: 5000,\r\n        pause: 'hover',\r\n        wrap: true,\r\n        keyboard: true\r\n    }\r\n\r\n    Carousel.prototype.keydown = function (e) {\r\n        if (/input|textarea/i.test(e.target.tagName)) return\r\n        switch (e.which) {\r\n            case 37: this.prev(); break\r\n            case 39: this.next(); break\r\n            default: return\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    Carousel.prototype.cycle = function (e) {\r\n        e || (this.paused = false)\r\n\r\n        this.interval && clearInterval(this.interval)\r\n\r\n        this.options.interval\r\n        && !this.paused\r\n        && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\r\n\r\n        return this\r\n    }\r\n\r\n    Carousel.prototype.getItemIndex = function (item) {\r\n        this.$items = item.parent().children('.item')\r\n        return this.$items.index(item || this.$active)\r\n    }\r\n\r\n    Carousel.prototype.getItemForDirection = function (direction, active) {\r\n        var activeIndex = this.getItemIndex(active)\r\n        var willWrap = (direction == 'prev' && activeIndex === 0)\r\n            || (direction == 'next' && activeIndex == (this.$items.length - 1))\r\n        if (willWrap && !this.options.wrap) return active\r\n        var delta = direction == 'prev' ? -1 : 1\r\n        var itemIndex = (activeIndex + delta) % this.$items.length\r\n        return this.$items.eq(itemIndex)\r\n    }\r\n\r\n    Carousel.prototype.to = function (pos) {\r\n        var that        = this\r\n        var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\r\n\r\n        if (pos > (this.$items.length - 1) || pos < 0) return\r\n\r\n        if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\r\n        if (activeIndex == pos) return this.pause().cycle()\r\n\r\n        return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\r\n    }\r\n\r\n    Carousel.prototype.pause = function (e) {\r\n        e || (this.paused = true)\r\n\r\n        if (this.$element.find('.next, .prev').length && $.support.transition) {\r\n            this.$element.trigger($.support.transition.end)\r\n            this.cycle(true)\r\n        }\r\n\r\n        this.interval = clearInterval(this.interval)\r\n\r\n        return this\r\n    }\r\n\r\n    Carousel.prototype.next = function () {\r\n        if (this.sliding) return\r\n        return this.slide('next')\r\n    }\r\n\r\n    Carousel.prototype.prev = function () {\r\n        if (this.sliding) return\r\n        return this.slide('prev')\r\n    }\r\n\r\n    Carousel.prototype.slide = function (type, next) {\r\n        var $active   = this.$element.find('.item.active')\r\n        var $next     = next || this.getItemForDirection(type, $active)\r\n        var isCycling = this.interval\r\n        var direction = type == 'next' ? 'left' : 'right'\r\n        var that      = this\r\n\r\n        if ($next.hasClass('active')) return (this.sliding = false)\r\n\r\n        var relatedTarget = $next[0]\r\n        var slideEvent = $.Event('slide.bs.carousel', {\r\n            relatedTarget: relatedTarget,\r\n            direction: direction\r\n        })\r\n        this.$element.trigger(slideEvent)\r\n        if (slideEvent.isDefaultPrevented()) return\r\n\r\n        this.sliding = true\r\n\r\n        isCycling && this.pause()\r\n\r\n        if (this.$indicators.length) {\r\n            this.$indicators.find('.active').removeClass('active')\r\n            var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\r\n            $nextIndicator && $nextIndicator.addClass('active')\r\n        }\r\n\r\n        var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\r\n        if ($.support.transition && this.$element.hasClass('slide')) {\r\n            $next.addClass(type)\r\n            $next[0].offsetWidth // force reflow\r\n            $active.addClass(direction)\r\n            $next.addClass(direction)\r\n            $active\r\n                .one('bsTransitionEnd', function () {\r\n                    $next.removeClass([type, direction].join(' ')).addClass('active')\r\n                    $active.removeClass(['active', direction].join(' '))\r\n                    that.sliding = false\r\n                    setTimeout(function () {\r\n                        that.$element.trigger(slidEvent)\r\n                    }, 0)\r\n                })\r\n                .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\r\n        } else {\r\n            $active.removeClass('active')\r\n            $next.addClass('active')\r\n            this.sliding = false\r\n            this.$element.trigger(slidEvent)\r\n        }\r\n\r\n        isCycling && this.cycle()\r\n\r\n        return this\r\n    }\r\n\r\n\r\n    // CAROUSEL PLUGIN DEFINITION\r\n    // ==========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.carousel')\r\n            var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n            var action  = typeof option == 'string' ? option : options.slide\r\n\r\n            if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\r\n            if (typeof option == 'number') data.to(option)\r\n            else if (action) data[action]()\r\n            else if (options.interval) data.pause().cycle()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.carousel\r\n\r\n    $.fn.carousel             = Plugin\r\n    $.fn.carousel.Constructor = Carousel\r\n\r\n\r\n    // CAROUSEL NO CONFLICT\r\n    // ====================\r\n\r\n    $.fn.carousel.noConflict = function () {\r\n        $.fn.carousel = old\r\n        return this\r\n    }\r\n\r\n\r\n    // CAROUSEL DATA-API\r\n    // =================\r\n\r\n    var clickHandler = function (e) {\r\n        var href\r\n        var $this   = $(this)\r\n        var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\r\n        if (!$target.hasClass('carousel')) return\r\n        var options = $.extend({}, $target.data(), $this.data())\r\n        var slideIndex = $this.attr('data-slide-to')\r\n        if (slideIndex) options.interval = false\r\n\r\n        Plugin.call($target, options)\r\n\r\n        if (slideIndex) {\r\n            $target.data('bs.carousel').to(slideIndex)\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    $(document)\r\n        .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\r\n        .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\r\n\r\n    $(window).on('load', function () {\r\n        $('[data-ride=\"carousel\"]').each(function () {\r\n            var $carousel = $(this)\r\n            Plugin.call($carousel, $carousel.data())\r\n        })\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: collapse.js v3.3.4\r\n * http://getbootstrap.com/javascript/#collapse\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // COLLAPSE PUBLIC CLASS DEFINITION\r\n    // ================================\r\n\r\n    var Collapse = function (element, options) {\r\n        this.$element      = $(element)\r\n        this.options       = $.extend({}, Collapse.DEFAULTS, options)\r\n        this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\r\n            '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\r\n        this.transitioning = null\r\n\r\n        if (this.options.parent) {\r\n            this.$parent = this.getParent()\r\n        } else {\r\n            this.addAriaAndCollapsedClass(this.$element, this.$trigger)\r\n        }\r\n\r\n        if (this.options.toggle) this.toggle()\r\n    }\r\n\r\n    Collapse.VERSION  = '3.3.4'\r\n\r\n    Collapse.TRANSITION_DURATION = 350\r\n\r\n    Collapse.DEFAULTS = {\r\n        toggle: true\r\n    }\r\n\r\n    Collapse.prototype.dimension = function () {\r\n        var hasWidth = this.$element.hasClass('width')\r\n        return hasWidth ? 'width' : 'height'\r\n    }\r\n\r\n    Collapse.prototype.show = function () {\r\n        if (this.transitioning || this.$element.hasClass('in')) return\r\n\r\n        var activesData\r\n        var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\r\n\r\n        if (actives && actives.length) {\r\n            activesData = actives.data('bs.collapse')\r\n            if (activesData && activesData.transitioning) return\r\n        }\r\n\r\n        var startEvent = $.Event('show.bs.collapse')\r\n        this.$element.trigger(startEvent)\r\n        if (startEvent.isDefaultPrevented()) return\r\n\r\n        if (actives && actives.length) {\r\n            Plugin.call(actives, 'hide')\r\n            activesData || actives.data('bs.collapse', null)\r\n        }\r\n\r\n        var dimension = this.dimension()\r\n\r\n        this.$element\r\n            .removeClass('collapse')\r\n            .addClass('collapsing')[dimension](0)\r\n            .attr('aria-expanded', true)\r\n\r\n        this.$trigger\r\n            .removeClass('collapsed')\r\n            .attr('aria-expanded', true)\r\n\r\n        this.transitioning = 1\r\n\r\n        var complete = function () {\r\n            this.$element\r\n                .removeClass('collapsing')\r\n                .addClass('collapse in')[dimension]('')\r\n            this.transitioning = 0\r\n            this.$element\r\n                .trigger('shown.bs.collapse')\r\n        }\r\n\r\n        if (!$.support.transition) return complete.call(this)\r\n\r\n        var scrollSize = $.camelCase(['scroll', dimension].join('-'))\r\n\r\n        this.$element\r\n            .one('bsTransitionEnd', $.proxy(complete, this))\r\n            .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\r\n    }\r\n\r\n    Collapse.prototype.hide = function () {\r\n        if (this.transitioning || !this.$element.hasClass('in')) return\r\n\r\n        var startEvent = $.Event('hide.bs.collapse')\r\n        this.$element.trigger(startEvent)\r\n        if (startEvent.isDefaultPrevented()) return\r\n\r\n        var dimension = this.dimension()\r\n\r\n        this.$element[dimension](this.$element[dimension]())[0].offsetHeight\r\n\r\n        this.$element\r\n            .addClass('collapsing')\r\n            .removeClass('collapse in')\r\n            .attr('aria-expanded', false)\r\n\r\n        this.$trigger\r\n            .addClass('collapsed')\r\n            .attr('aria-expanded', false)\r\n\r\n        this.transitioning = 1\r\n\r\n        var complete = function () {\r\n            this.transitioning = 0\r\n            this.$element\r\n                .removeClass('collapsing')\r\n                .addClass('collapse')\r\n                .trigger('hidden.bs.collapse')\r\n        }\r\n\r\n        if (!$.support.transition) return complete.call(this)\r\n\r\n        this.$element\r\n            [dimension](0)\r\n            .one('bsTransitionEnd', $.proxy(complete, this))\r\n            .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\r\n    }\r\n\r\n    Collapse.prototype.toggle = function () {\r\n        this[this.$element.hasClass('in') ? 'hide' : 'show']()\r\n    }\r\n\r\n    Collapse.prototype.getParent = function () {\r\n        return $(this.options.parent)\r\n            .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\r\n            .each($.proxy(function (i, element) {\r\n                var $element = $(element)\r\n                this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\r\n            }, this))\r\n            .end()\r\n    }\r\n\r\n    Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\r\n        var isOpen = $element.hasClass('in')\r\n\r\n        $element.attr('aria-expanded', isOpen)\r\n        $trigger\r\n            .toggleClass('collapsed', !isOpen)\r\n            .attr('aria-expanded', isOpen)\r\n    }\r\n\r\n    function getTargetFromTrigger($trigger) {\r\n        var href\r\n        var target = $trigger.attr('data-target')\r\n            || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\r\n\r\n        return $(target)\r\n    }\r\n\r\n\r\n    // COLLAPSE PLUGIN DEFINITION\r\n    // ==========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.collapse')\r\n            var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n\r\n            if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\r\n            if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.collapse\r\n\r\n    $.fn.collapse             = Plugin\r\n    $.fn.collapse.Constructor = Collapse\r\n\r\n\r\n    // COLLAPSE NO CONFLICT\r\n    // ====================\r\n\r\n    $.fn.collapse.noConflict = function () {\r\n        $.fn.collapse = old\r\n        return this\r\n    }\r\n\r\n\r\n    // COLLAPSE DATA-API\r\n    // =================\r\n\r\n    $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\r\n        var $this   = $(this)\r\n\r\n        if (!$this.attr('data-target')) e.preventDefault()\r\n\r\n        var $target = getTargetFromTrigger($this)\r\n        var data    = $target.data('bs.collapse')\r\n        var option  = data ? 'toggle' : $this.data()\r\n\r\n        Plugin.call($target, option)\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: dropdown.js v3.3.4\r\n * http://getbootstrap.com/javascript/#dropdowns\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // DROPDOWN CLASS DEFINITION\r\n    // =========================\r\n\r\n    var backdrop = '.dropdown-backdrop'\r\n    var toggle   = '[data-toggle=\"dropdown\"]'\r\n    var Dropdown = function (element) {\r\n        $(element).on('click.bs.dropdown', this.toggle)\r\n    }\r\n\r\n    Dropdown.VERSION = '3.3.4'\r\n\r\n    Dropdown.prototype.toggle = function (e) {\r\n        var $this = $(this)\r\n\r\n        if ($this.is('.disabled, :disabled')) return\r\n\r\n        var $parent  = getParent($this)\r\n        var isActive = $parent.hasClass('open')\r\n\r\n        clearMenus()\r\n\r\n        if (!isActive) {\r\n            if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\r\n                // if mobile we use a backdrop because click events don't delegate\r\n                $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\r\n            }\r\n\r\n            var relatedTarget = { relatedTarget: this }\r\n            $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\r\n\r\n            if (e.isDefaultPrevented()) return\r\n\r\n            $this\r\n                .trigger('focus')\r\n                .attr('aria-expanded', 'true')\r\n\r\n            $parent\r\n                .toggleClass('open')\r\n                .trigger('shown.bs.dropdown', relatedTarget)\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    Dropdown.prototype.keydown = function (e) {\r\n        if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\r\n\r\n        var $this = $(this)\r\n\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        if ($this.is('.disabled, :disabled')) return\r\n\r\n        var $parent  = getParent($this)\r\n        var isActive = $parent.hasClass('open')\r\n\r\n        if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\r\n            if (e.which == 27) $parent.find(toggle).trigger('focus')\r\n            return $this.trigger('click')\r\n        }\r\n\r\n        var desc = ' li:not(.disabled):visible a'\r\n        var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\r\n\r\n        if (!$items.length) return\r\n\r\n        var index = $items.index(e.target)\r\n\r\n        if (e.which == 38 && index > 0)                 index--                        // up\r\n        if (e.which == 40 && index < $items.length - 1) index++                        // down\r\n        if (!~index)                                      index = 0\r\n\r\n        $items.eq(index).trigger('focus')\r\n    }\r\n\r\n    function clearMenus(e) {\r\n        if (e && e.which === 3) return\r\n        $(backdrop).remove()\r\n        $(toggle).each(function () {\r\n            var $this         = $(this)\r\n            var $parent       = getParent($this)\r\n            var relatedTarget = { relatedTarget: this }\r\n\r\n            if (!$parent.hasClass('open')) return\r\n\r\n            $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\r\n\r\n            if (e.isDefaultPrevented()) return\r\n\r\n            $this.attr('aria-expanded', 'false')\r\n            $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\r\n        })\r\n    }\r\n\r\n    function getParent($this) {\r\n        var selector = $this.attr('data-target')\r\n\r\n        if (!selector) {\r\n            selector = $this.attr('href')\r\n            selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n        }\r\n\r\n        var $parent = selector && $(selector)\r\n\r\n        return $parent && $parent.length ? $parent : $this.parent()\r\n    }\r\n\r\n\r\n    // DROPDOWN PLUGIN DEFINITION\r\n    // ==========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this = $(this)\r\n            var data  = $this.data('bs.dropdown')\r\n\r\n            if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\r\n            if (typeof option == 'string') data[option].call($this)\r\n        })\r\n    }\r\n\r\n    var old = $.fn.dropdown\r\n\r\n    $.fn.dropdown             = Plugin\r\n    $.fn.dropdown.Constructor = Dropdown\r\n\r\n\r\n    // DROPDOWN NO CONFLICT\r\n    // ====================\r\n\r\n    $.fn.dropdown.noConflict = function () {\r\n        $.fn.dropdown = old\r\n        return this\r\n    }\r\n\r\n\r\n    // APPLY TO STANDARD DROPDOWN ELEMENTS\r\n    // ===================================\r\n\r\n    $(document)\r\n        .on('click.bs.dropdown.data-api', clearMenus)\r\n        .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\r\n        .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\r\n        .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\r\n        .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\r\n        .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: modal.js v3.3.4\r\n * http://getbootstrap.com/javascript/#modals\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // MODAL CLASS DEFINITION\r\n    // ======================\r\n\r\n    var Modal = function (element, options) {\r\n        this.options             = options\r\n        this.$body               = $(document.body)\r\n        this.$element            = $(element)\r\n        this.$dialog             = this.$element.find('.modal-dialog')\r\n        this.$backdrop           = null\r\n        this.isShown             = null\r\n        this.originalBodyPad     = null\r\n        this.scrollbarWidth      = 0\r\n        this.ignoreBackdropClick = false\r\n\r\n        if (this.options.remote) {\r\n            this.$element\r\n                .find('.modal-content')\r\n                .load(this.options.remote, $.proxy(function () {\r\n                    this.$element.trigger('loaded.bs.modal')\r\n                }, this))\r\n        }\r\n    }\r\n\r\n    Modal.VERSION  = '3.3.4'\r\n\r\n    Modal.TRANSITION_DURATION = 300\r\n    Modal.BACKDROP_TRANSITION_DURATION = 150\r\n\r\n    Modal.DEFAULTS = {\r\n        backdrop: true,\r\n        keyboard: true,\r\n        show: true\r\n    }\r\n\r\n    Modal.prototype.toggle = function (_relatedTarget) {\r\n        return this.isShown ? this.hide() : this.show(_relatedTarget)\r\n    }\r\n\r\n    Modal.prototype.show = function (_relatedTarget) {\r\n        var that = this\r\n        var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\r\n\r\n        this.$element.trigger(e)\r\n\r\n        if (this.isShown || e.isDefaultPrevented()) return\r\n\r\n        this.isShown = true\r\n\r\n        this.checkScrollbar()\r\n        this.setScrollbar()\r\n        this.$body.addClass('modal-open')\r\n\r\n        this.escape()\r\n        this.resize()\r\n\r\n        this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\r\n\r\n        this.$dialog.on('mousedown.dismiss.bs.modal', function () {\r\n            that.$element.one('mouseup.dismiss.bs.modal', function (e) {\r\n                if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\r\n            })\r\n        })\r\n\r\n        this.backdrop(function () {\r\n            var transition = $.support.transition && that.$element.hasClass('fade')\r\n\r\n            if (!that.$element.parent().length) {\r\n                that.$element.appendTo(that.$body) // don't move modals dom position\r\n            }\r\n\r\n            that.$element\r\n                .show()\r\n                .scrollTop(0)\r\n\r\n            that.adjustDialog()\r\n\r\n            if (transition) {\r\n                that.$element[0].offsetWidth // force reflow\r\n            }\r\n\r\n            that.$element\r\n                .addClass('in')\r\n                .attr('aria-hidden', false)\r\n\r\n            that.enforceFocus()\r\n\r\n            var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\r\n\r\n            transition ?\r\n                that.$dialog // wait for modal to slide in\r\n                    .one('bsTransitionEnd', function () {\r\n                        that.$element.trigger('focus').trigger(e)\r\n                    })\r\n                    .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\r\n                that.$element.trigger('focus').trigger(e)\r\n        })\r\n    }\r\n\r\n    Modal.prototype.hide = function (e) {\r\n        if (e) e.preventDefault()\r\n\r\n        e = $.Event('hide.bs.modal')\r\n\r\n        this.$element.trigger(e)\r\n\r\n        if (!this.isShown || e.isDefaultPrevented()) return\r\n\r\n        this.isShown = false\r\n\r\n        this.escape()\r\n        this.resize()\r\n\r\n        $(document).off('focusin.bs.modal')\r\n\r\n        this.$element\r\n            .removeClass('in')\r\n            .attr('aria-hidden', true)\r\n            .off('click.dismiss.bs.modal')\r\n            .off('mouseup.dismiss.bs.modal')\r\n\r\n        this.$dialog.off('mousedown.dismiss.bs.modal')\r\n\r\n        $.support.transition && this.$element.hasClass('fade') ?\r\n            this.$element\r\n                .one('bsTransitionEnd', $.proxy(this.hideModal, this))\r\n                .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\r\n            this.hideModal()\r\n    }\r\n\r\n    Modal.prototype.enforceFocus = function () {\r\n        $(document)\r\n            .off('focusin.bs.modal') // guard against infinite focus loop\r\n            .on('focusin.bs.modal', $.proxy(function (e) {\r\n                if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\r\n                    this.$element.trigger('focus')\r\n                }\r\n            }, this))\r\n    }\r\n\r\n    Modal.prototype.escape = function () {\r\n        if (this.isShown && this.options.keyboard) {\r\n            this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\r\n                e.which == 27 && this.hide()\r\n            }, this))\r\n        } else if (!this.isShown) {\r\n            this.$element.off('keydown.dismiss.bs.modal')\r\n        }\r\n    }\r\n\r\n    Modal.prototype.resize = function () {\r\n        if (this.isShown) {\r\n            $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\r\n        } else {\r\n            $(window).off('resize.bs.modal')\r\n        }\r\n    }\r\n\r\n    Modal.prototype.hideModal = function () {\r\n        var that = this\r\n        this.$element.hide()\r\n        this.backdrop(function () {\r\n            that.$body.removeClass('modal-open')\r\n            that.resetAdjustments()\r\n            that.resetScrollbar()\r\n            that.$element.trigger('hidden.bs.modal')\r\n        })\r\n    }\r\n\r\n    Modal.prototype.removeBackdrop = function () {\r\n        this.$backdrop && this.$backdrop.remove()\r\n        this.$backdrop = null\r\n    }\r\n\r\n    Modal.prototype.backdrop = function (callback) {\r\n        var that = this\r\n        var animate = this.$element.hasClass('fade') ? 'fade' : ''\r\n\r\n        if (this.isShown && this.options.backdrop) {\r\n            var doAnimate = $.support.transition && animate\r\n\r\n            this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\r\n                .appendTo(this.$body)\r\n\r\n            this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\r\n                if (this.ignoreBackdropClick) {\r\n                    this.ignoreBackdropClick = false\r\n                    return\r\n                }\r\n                if (e.target !== e.currentTarget) return\r\n                this.options.backdrop == 'static'\r\n                    ? this.$element[0].focus()\r\n                    : this.hide()\r\n            }, this))\r\n\r\n            if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\r\n\r\n            this.$backdrop.addClass('in')\r\n\r\n            if (!callback) return\r\n\r\n            doAnimate ?\r\n                this.$backdrop\r\n                    .one('bsTransitionEnd', callback)\r\n                    .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\r\n                callback()\r\n\r\n        } else if (!this.isShown && this.$backdrop) {\r\n            this.$backdrop.removeClass('in')\r\n\r\n            var callbackRemove = function () {\r\n                that.removeBackdrop()\r\n                callback && callback()\r\n            }\r\n            $.support.transition && this.$element.hasClass('fade') ?\r\n                this.$backdrop\r\n                    .one('bsTransitionEnd', callbackRemove)\r\n                    .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\r\n                callbackRemove()\r\n\r\n        } else if (callback) {\r\n            callback()\r\n        }\r\n    }\r\n\r\n    // these following methods are used to handle overflowing modals\r\n\r\n    Modal.prototype.handleUpdate = function () {\r\n        this.adjustDialog()\r\n    }\r\n\r\n    Modal.prototype.adjustDialog = function () {\r\n        var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\r\n\r\n        this.$element.css({\r\n            paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\r\n            paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\r\n        })\r\n    }\r\n\r\n    Modal.prototype.resetAdjustments = function () {\r\n        this.$element.css({\r\n            paddingLeft: '',\r\n            paddingRight: ''\r\n        })\r\n    }\r\n\r\n    Modal.prototype.checkScrollbar = function () {\r\n        var fullWindowWidth = window.innerWidth\r\n        if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\r\n            var documentElementRect = document.documentElement.getBoundingClientRect()\r\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\r\n        }\r\n        this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\r\n        this.scrollbarWidth = this.measureScrollbar()\r\n    }\r\n\r\n    Modal.prototype.setScrollbar = function () {\r\n        var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\r\n        this.originalBodyPad = document.body.style.paddingRight || ''\r\n        if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\r\n    }\r\n\r\n    Modal.prototype.resetScrollbar = function () {\r\n        this.$body.css('padding-right', this.originalBodyPad)\r\n    }\r\n\r\n    Modal.prototype.measureScrollbar = function () { // thx walsh\r\n        var scrollDiv = document.createElement('div')\r\n        scrollDiv.className = 'modal-scrollbar-measure'\r\n        this.$body.append(scrollDiv)\r\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\r\n        this.$body[0].removeChild(scrollDiv)\r\n        return scrollbarWidth\r\n    }\r\n\r\n\r\n    // MODAL PLUGIN DEFINITION\r\n    // =======================\r\n\r\n    function Plugin(option, _relatedTarget) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.modal')\r\n            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n\r\n            if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\r\n            if (typeof option == 'string') data[option](_relatedTarget)\r\n            else if (options.show) data.show(_relatedTarget)\r\n        })\r\n    }\r\n\r\n    var old = $.fn.modal\r\n\r\n    $.fn.modal             = Plugin\r\n    $.fn.modal.Constructor = Modal\r\n\r\n\r\n    // MODAL NO CONFLICT\r\n    // =================\r\n\r\n    $.fn.modal.noConflict = function () {\r\n        $.fn.modal = old\r\n        return this\r\n    }\r\n\r\n\r\n    // MODAL DATA-API\r\n    // ==============\r\n\r\n    $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\r\n        var $this   = $(this)\r\n        var href    = $this.attr('href')\r\n        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\r\n        var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\r\n\r\n        if ($this.is('a')) e.preventDefault()\r\n\r\n        $target.one('show.bs.modal', function (showEvent) {\r\n            if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\r\n            $target.one('hidden.bs.modal', function () {\r\n                $this.is(':visible') && $this.trigger('focus')\r\n            })\r\n        })\r\n        Plugin.call($target, option, this)\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: tooltip.js v3.3.4\r\n * http://getbootstrap.com/javascript/#tooltip\r\n * Inspired by the original jQuery.tipsy by Jason Frame\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // TOOLTIP PUBLIC CLASS DEFINITION\r\n    // ===============================\r\n\r\n    var Tooltip = function (element, options) {\r\n        this.type       = null\r\n        this.options    = null\r\n        this.enabled    = null\r\n        this.timeout    = null\r\n        this.hoverState = null\r\n        this.$element   = null\r\n\r\n        this.init('tooltip', element, options)\r\n    }\r\n\r\n    Tooltip.VERSION  = '3.3.4'\r\n\r\n    Tooltip.TRANSITION_DURATION = 150\r\n\r\n    Tooltip.DEFAULTS = {\r\n        animation: true,\r\n        placement: 'top',\r\n        selector: false,\r\n        template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\r\n        trigger: 'hover focus',\r\n        title: '',\r\n        delay: 0,\r\n        html: false,\r\n        container: false,\r\n        viewport: {\r\n            selector: 'body',\r\n            padding: 0\r\n        }\r\n    }\r\n\r\n    Tooltip.prototype.init = function (type, element, options) {\n        var this$1 = this;\n\r\n        this.enabled   = true\r\n        this.type      = type\r\n        this.$element  = $(element)\r\n        this.options   = this.getOptions(options)\r\n        this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\r\n\r\n        if (this.$element[0] instanceof document.constructor && !this.options.selector) {\r\n            throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\r\n        }\r\n\r\n        var triggers = this.options.trigger.split(' ')\r\n\r\n        for (var i = triggers.length; i--;) {\r\n            var trigger = triggers[i]\r\n\r\n            if (trigger == 'click') {\r\n                this$1.$element.on('click.' + this$1.type, this$1.options.selector, $.proxy(this$1.toggle, this$1))\r\n            } else if (trigger != 'manual') {\r\n                var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\r\n                var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\r\n\r\n                this$1.$element.on(eventIn  + '.' + this$1.type, this$1.options.selector, $.proxy(this$1.enter, this$1))\r\n                this$1.$element.on(eventOut + '.' + this$1.type, this$1.options.selector, $.proxy(this$1.leave, this$1))\r\n            }\r\n        }\r\n\r\n        this.options.selector ?\r\n            (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\r\n            this.fixTitle()\r\n    }\r\n\r\n    Tooltip.prototype.getDefaults = function () {\r\n        return Tooltip.DEFAULTS\r\n    }\r\n\r\n    Tooltip.prototype.getOptions = function (options) {\r\n        options = $.extend({}, this.getDefaults(), this.$element.data(), options)\r\n\r\n        if (options.delay && typeof options.delay == 'number') {\r\n            options.delay = {\r\n                show: options.delay,\r\n                hide: options.delay\r\n            }\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    Tooltip.prototype.getDelegateOptions = function () {\r\n        var options  = {}\r\n        var defaults = this.getDefaults()\r\n\r\n        this._options && $.each(this._options, function (key, value) {\r\n            if (defaults[key] != value) options[key] = value\r\n        })\r\n\r\n        return options\r\n    }\r\n\r\n    Tooltip.prototype.enter = function (obj) {\r\n        var self = obj instanceof this.constructor ?\r\n            obj : $(obj.currentTarget).data('bs.' + this.type)\r\n\r\n        if (self && self.$tip && self.$tip.is(':visible')) {\r\n            self.hoverState = 'in'\r\n            return\r\n        }\r\n\r\n        if (!self) {\r\n            self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\r\n            $(obj.currentTarget).data('bs.' + this.type, self)\r\n        }\r\n\r\n        clearTimeout(self.timeout)\r\n\r\n        self.hoverState = 'in'\r\n\r\n        if (!self.options.delay || !self.options.delay.show) return self.show()\r\n\r\n        self.timeout = setTimeout(function () {\r\n            if (self.hoverState == 'in') self.show()\r\n        }, self.options.delay.show)\r\n    }\r\n\r\n    Tooltip.prototype.leave = function (obj) {\r\n        var self = obj instanceof this.constructor ?\r\n            obj : $(obj.currentTarget).data('bs.' + this.type)\r\n\r\n        if (!self) {\r\n            self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\r\n            $(obj.currentTarget).data('bs.' + this.type, self)\r\n        }\r\n\r\n        clearTimeout(self.timeout)\r\n\r\n        self.hoverState = 'out'\r\n\r\n        if (!self.options.delay || !self.options.delay.hide) return self.hide()\r\n\r\n        self.timeout = setTimeout(function () {\r\n            if (self.hoverState == 'out') self.hide()\r\n        }, self.options.delay.hide)\r\n    }\r\n\r\n    Tooltip.prototype.show = function () {\r\n        var e = $.Event('show.bs.' + this.type)\r\n\r\n        if (this.hasContent() && this.enabled) {\r\n            this.$element.trigger(e)\r\n\r\n            var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\r\n            if (e.isDefaultPrevented() || !inDom) return\r\n            var that = this\r\n\r\n            var $tip = this.tip()\r\n\r\n            var tipId = this.getUID(this.type)\r\n\r\n            this.setContent()\r\n            $tip.attr('id', tipId)\r\n            this.$element.attr('aria-describedby', tipId)\r\n\r\n            if (this.options.animation) $tip.addClass('fade')\r\n\r\n            var placement = typeof this.options.placement == 'function' ?\r\n                this.options.placement.call(this, $tip[0], this.$element[0]) :\r\n                this.options.placement\r\n\r\n            var autoToken = /\\s?auto?\\s?/i\r\n            var autoPlace = autoToken.test(placement)\r\n            if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\r\n\r\n            $tip\r\n                .detach()\r\n                .css({ top: 0, left: 0, display: 'block' })\r\n                .addClass(placement)\r\n                .data('bs.' + this.type, this)\r\n\r\n            this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\r\n\r\n            var pos          = this.getPosition()\r\n            var actualWidth  = $tip[0].offsetWidth\r\n            var actualHeight = $tip[0].offsetHeight\r\n\r\n            if (autoPlace) {\r\n                var orgPlacement = placement\r\n                var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\r\n                var containerDim = this.getPosition($container)\r\n\r\n                placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\r\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\r\n                        placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\r\n                            placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\r\n                                placement\r\n\r\n                $tip\r\n                    .removeClass(orgPlacement)\r\n                    .addClass(placement)\r\n            }\r\n\r\n            var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\r\n\r\n            this.applyPlacement(calculatedOffset, placement)\r\n\r\n            var complete = function () {\r\n                var prevHoverState = that.hoverState\r\n                that.$element.trigger('shown.bs.' + that.type)\r\n                that.hoverState = null\r\n\r\n                if (prevHoverState == 'out') that.leave(that)\r\n            }\r\n\r\n            $.support.transition && this.$tip.hasClass('fade') ?\r\n                $tip\r\n                    .one('bsTransitionEnd', complete)\r\n                    .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\r\n                complete()\r\n        }\r\n    }\r\n\r\n    Tooltip.prototype.applyPlacement = function (offset, placement) {\r\n        var $tip   = this.tip()\r\n        var width  = $tip[0].offsetWidth\r\n        var height = $tip[0].offsetHeight\r\n\r\n        // manually read margins because getBoundingClientRect includes difference\r\n        var marginTop = parseInt($tip.css('margin-top'), 10)\r\n        var marginLeft = parseInt($tip.css('margin-left'), 10)\r\n\r\n        // we must check for NaN for ie 8/9\r\n        if (isNaN(marginTop))  marginTop  = 0\r\n        if (isNaN(marginLeft)) marginLeft = 0\r\n\r\n        offset.top  = offset.top  + marginTop\r\n        offset.left = offset.left + marginLeft\r\n\r\n        // $.fn.offset doesn't round pixel values\r\n        // so we use setOffset directly with our own function B-0\r\n        $.offset.setOffset($tip[0], $.extend({\r\n            using: function (props) {\r\n                $tip.css({\r\n                    top: Math.round(props.top),\r\n                    left: Math.round(props.left)\r\n                })\r\n            }\r\n        }, offset), 0)\r\n\r\n        $tip.addClass('in')\r\n\r\n        // check to see if placing tip in new offset caused the tip to resize itself\r\n        var actualWidth  = $tip[0].offsetWidth\r\n        var actualHeight = $tip[0].offsetHeight\r\n\r\n        if (placement == 'top' && actualHeight != height) {\r\n            offset.top = offset.top + height - actualHeight\r\n        }\r\n\r\n        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\r\n\r\n        if (delta.left) offset.left += delta.left\r\n        else offset.top += delta.top\r\n\r\n        var isVertical          = /top|bottom/.test(placement)\r\n        var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\r\n        var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\r\n\r\n        $tip.offset(offset)\r\n        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\r\n    }\r\n\r\n    Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\r\n        this.arrow()\r\n            .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\r\n            .css(isVertical ? 'top' : 'left', '')\r\n    }\r\n\r\n    Tooltip.prototype.setContent = function () {\r\n        var $tip  = this.tip()\r\n        var title = this.getTitle()\r\n\r\n        $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\r\n        $tip.removeClass('fade in top bottom left right')\r\n    }\r\n\r\n    Tooltip.prototype.hide = function (callback) {\r\n        var that = this\r\n        var $tip = $(this.$tip)\r\n        var e    = $.Event('hide.bs.' + this.type)\r\n\r\n        function complete() {\r\n            if (that.hoverState != 'in') $tip.detach()\r\n            that.$element\r\n                .removeAttr('aria-describedby')\r\n                .trigger('hidden.bs.' + that.type)\r\n            callback && callback()\r\n        }\r\n\r\n        this.$element.trigger(e)\r\n\r\n        if (e.isDefaultPrevented()) return\r\n\r\n        $tip.removeClass('in')\r\n\r\n        $.support.transition && $tip.hasClass('fade') ?\r\n            $tip\r\n                .one('bsTransitionEnd', complete)\r\n                .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\r\n            complete()\r\n\r\n        this.hoverState = null\r\n\r\n        return this\r\n    }\r\n\r\n    Tooltip.prototype.fixTitle = function () {\r\n        var $e = this.$element\r\n        if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\r\n            $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\r\n        }\r\n    }\r\n\r\n    Tooltip.prototype.hasContent = function () {\r\n        return this.getTitle()\r\n    }\r\n\r\n    Tooltip.prototype.getPosition = function ($element) {\r\n        $element   = $element || this.$element\r\n\r\n        var el     = $element[0]\r\n        var isBody = el.tagName == 'BODY'\r\n\r\n        var elRect    = el.getBoundingClientRect()\r\n        if (elRect.width == null) {\r\n            // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\r\n            elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\r\n        }\r\n        var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\r\n        var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\r\n        var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\r\n\r\n        return $.extend({}, elRect, scroll, outerDims, elOffset)\r\n    }\r\n\r\n    Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\r\n        return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\r\n            placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\r\n                placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\r\n                    /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\r\n\r\n    }\r\n\r\n    Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\r\n        var delta = { top: 0, left: 0 }\r\n        if (!this.$viewport) return delta\r\n\r\n        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\r\n        var viewportDimensions = this.getPosition(this.$viewport)\r\n\r\n        if (/right|left/.test(placement)) {\r\n            var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\r\n            var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\r\n            if (topEdgeOffset < viewportDimensions.top) { // top overflow\r\n                delta.top = viewportDimensions.top - topEdgeOffset\r\n            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\r\n                delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\r\n            }\r\n        } else {\r\n            var leftEdgeOffset  = pos.left - viewportPadding\r\n            var rightEdgeOffset = pos.left + viewportPadding + actualWidth\r\n            if (leftEdgeOffset < viewportDimensions.left) { // left overflow\r\n                delta.left = viewportDimensions.left - leftEdgeOffset\r\n            } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\r\n                delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\r\n            }\r\n        }\r\n\r\n        return delta\r\n    }\r\n\r\n    Tooltip.prototype.getTitle = function () {\r\n        var title\r\n        var $e = this.$element\r\n        var o  = this.options\r\n\r\n        title = $e.attr('data-original-title')\r\n            || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\r\n\r\n        return title\r\n    }\r\n\r\n    Tooltip.prototype.getUID = function (prefix) {\r\n        do prefix += ~~(Math.random() * 1000000)\r\n        while (document.getElementById(prefix))\r\n        return prefix\r\n    }\r\n\r\n    Tooltip.prototype.tip = function () {\r\n        return (this.$tip = this.$tip || $(this.options.template))\r\n    }\r\n\r\n    Tooltip.prototype.arrow = function () {\r\n        return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\r\n    }\r\n\r\n    Tooltip.prototype.enable = function () {\r\n        this.enabled = true\r\n    }\r\n\r\n    Tooltip.prototype.disable = function () {\r\n        this.enabled = false\r\n    }\r\n\r\n    Tooltip.prototype.toggleEnabled = function () {\r\n        this.enabled = !this.enabled\r\n    }\r\n\r\n    Tooltip.prototype.toggle = function (e) {\r\n        var self = this\r\n        if (e) {\r\n            self = $(e.currentTarget).data('bs.' + this.type)\r\n            if (!self) {\r\n                self = new this.constructor(e.currentTarget, this.getDelegateOptions())\r\n                $(e.currentTarget).data('bs.' + this.type, self)\r\n            }\r\n        }\r\n\r\n        self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\r\n    }\r\n\r\n    Tooltip.prototype.destroy = function () {\r\n        var that = this\r\n        clearTimeout(this.timeout)\r\n        this.hide(function () {\r\n            that.$element.off('.' + that.type).removeData('bs.' + that.type)\r\n        })\r\n    }\r\n\r\n\r\n    // TOOLTIP PLUGIN DEFINITION\r\n    // =========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.tooltip')\r\n            var options = typeof option == 'object' && option\r\n\r\n            if (!data && /destroy|hide/.test(option)) return\r\n            if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.tooltip\r\n\r\n    $.fn.tooltip             = Plugin\r\n    $.fn.tooltip.Constructor = Tooltip\r\n\r\n\r\n    // TOOLTIP NO CONFLICT\r\n    // ===================\r\n\r\n    $.fn.tooltip.noConflict = function () {\r\n        $.fn.tooltip = old\r\n        return this\r\n    }\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: popover.js v3.3.4\r\n * http://getbootstrap.com/javascript/#popovers\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // POPOVER PUBLIC CLASS DEFINITION\r\n    // ===============================\r\n\r\n    var Popover = function (element, options) {\r\n        this.init('popover', element, options)\r\n    }\r\n\r\n    if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\r\n\r\n    Popover.VERSION  = '3.3.4'\r\n\r\n    Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\r\n        placement: 'right',\r\n        trigger: 'click',\r\n        content: '',\r\n        template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\r\n    })\r\n\r\n\r\n    // NOTE: POPOVER EXTENDS tooltip.js\r\n    // ================================\r\n\r\n    Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\r\n\r\n    Popover.prototype.constructor = Popover\r\n\r\n    Popover.prototype.getDefaults = function () {\r\n        return Popover.DEFAULTS\r\n    }\r\n\r\n    Popover.prototype.setContent = function () {\r\n        var $tip    = this.tip()\r\n        var title   = this.getTitle()\r\n        var content = this.getContent()\r\n\r\n        $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\r\n        $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\r\n            this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\r\n            ](content)\r\n\r\n        $tip.removeClass('fade top bottom left right in')\r\n\r\n        // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\r\n        // this manually by checking the contents.\r\n        if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\r\n    }\r\n\r\n    Popover.prototype.hasContent = function () {\r\n        return this.getTitle() || this.getContent()\r\n    }\r\n\r\n    Popover.prototype.getContent = function () {\r\n        var $e = this.$element\r\n        var o  = this.options\r\n\r\n        return $e.attr('data-content')\r\n            || (typeof o.content == 'function' ?\r\n                o.content.call($e[0]) :\r\n                o.content)\r\n    }\r\n\r\n    Popover.prototype.arrow = function () {\r\n        return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\r\n    }\r\n\r\n\r\n    // POPOVER PLUGIN DEFINITION\r\n    // =========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.popover')\r\n            var options = typeof option == 'object' && option\r\n\r\n            if (!data && /destroy|hide/.test(option)) return\r\n            if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.popover\r\n\r\n    $.fn.popover             = Plugin\r\n    $.fn.popover.Constructor = Popover\r\n\r\n\r\n    // POPOVER NO CONFLICT\r\n    // ===================\r\n\r\n    $.fn.popover.noConflict = function () {\r\n        $.fn.popover = old\r\n        return this\r\n    }\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: scrollspy.js v3.3.4\r\n * http://getbootstrap.com/javascript/#scrollspy\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // SCROLLSPY CLASS DEFINITION\r\n    // ==========================\r\n\r\n    function ScrollSpy(element, options) {\r\n        this.$body          = $(document.body)\r\n        this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\r\n        this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\r\n        this.selector       = (this.options.target || '') + ' .nav li > a'\r\n        this.offsets        = []\r\n        this.targets        = []\r\n        this.activeTarget   = null\r\n        this.scrollHeight   = 0\r\n\r\n        this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\r\n        this.refresh()\r\n        this.process()\r\n    }\r\n\r\n    ScrollSpy.VERSION  = '3.3.4'\r\n\r\n    ScrollSpy.DEFAULTS = {\r\n        offset: 10\r\n    }\r\n\r\n    ScrollSpy.prototype.getScrollHeight = function () {\r\n        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\r\n    }\r\n\r\n    ScrollSpy.prototype.refresh = function () {\r\n        var that          = this\r\n        var offsetMethod  = 'offset'\r\n        var offsetBase    = 0\r\n\r\n        this.offsets      = []\r\n        this.targets      = []\r\n        this.scrollHeight = this.getScrollHeight()\r\n\r\n        if (!$.isWindow(this.$scrollElement[0])) {\r\n            offsetMethod = 'position'\r\n            offsetBase   = this.$scrollElement.scrollTop()\r\n        }\r\n\r\n        this.$body\r\n            .find(this.selector)\r\n            .map(function () {\r\n                var $el   = $(this)\r\n                var href  = $el.data('target') || $el.attr('href')\r\n                var $href = /^#./.test(href) && $(href)\r\n\r\n                return ($href\r\n                    && $href.length\r\n                    && $href.is(':visible')\r\n                    && [[$href[offsetMethod]().top + offsetBase, href]]) || null\r\n            })\r\n            .sort(function (a, b) { return a[0] - b[0] })\r\n            .each(function () {\r\n                that.offsets.push(this[0])\r\n                that.targets.push(this[1])\r\n            })\r\n    }\r\n\r\n    ScrollSpy.prototype.process = function () {\n        var this$1 = this;\n\r\n        var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\r\n        var scrollHeight = this.getScrollHeight()\r\n        var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\r\n        var offsets      = this.offsets\r\n        var targets      = this.targets\r\n        var activeTarget = this.activeTarget\r\n        var i\r\n\r\n        if (this.scrollHeight != scrollHeight) {\r\n            this.refresh()\r\n        }\r\n\r\n        if (scrollTop >= maxScroll) {\r\n            return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\r\n        }\r\n\r\n        if (activeTarget && scrollTop < offsets[0]) {\r\n            this.activeTarget = null\r\n            return this.clear()\r\n        }\r\n\r\n        for (i = offsets.length; i--;) {\r\n            activeTarget != targets[i]\r\n            && scrollTop >= offsets[i]\r\n            && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\r\n            && this$1.activate(targets[i])\r\n        }\r\n    }\r\n\r\n    ScrollSpy.prototype.activate = function (target) {\r\n        this.activeTarget = target\r\n\r\n        this.clear()\r\n\r\n        var selector = this.selector +\r\n            '[data-target=\"' + target + '\"],' +\r\n            this.selector + '[href=\"' + target + '\"]'\r\n\r\n        var active = $(selector)\r\n            .parents('li')\r\n            .addClass('active')\r\n\r\n        if (active.parent('.dropdown-menu').length) {\r\n            active = active\r\n                .closest('li.dropdown')\r\n                .addClass('active')\r\n        }\r\n\r\n        active.trigger('activate.bs.scrollspy')\r\n    }\r\n\r\n    ScrollSpy.prototype.clear = function () {\r\n        $(this.selector)\r\n            .parentsUntil(this.options.target, '.active')\r\n            .removeClass('active')\r\n    }\r\n\r\n\r\n    // SCROLLSPY PLUGIN DEFINITION\r\n    // ===========================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.scrollspy')\r\n            var options = typeof option == 'object' && option\r\n\r\n            if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.scrollspy\r\n\r\n    $.fn.scrollspy             = Plugin\r\n    $.fn.scrollspy.Constructor = ScrollSpy\r\n\r\n\r\n    // SCROLLSPY NO CONFLICT\r\n    // =====================\r\n\r\n    $.fn.scrollspy.noConflict = function () {\r\n        $.fn.scrollspy = old\r\n        return this\r\n    }\r\n\r\n\r\n    // SCROLLSPY DATA-API\r\n    // ==================\r\n\r\n    $(window).on('load.bs.scrollspy.data-api', function () {\r\n        $('[data-spy=\"scroll\"]').each(function () {\r\n            var $spy = $(this)\r\n            Plugin.call($spy, $spy.data())\r\n        })\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: tab.js v3.3.4\r\n * http://getbootstrap.com/javascript/#tabs\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // TAB CLASS DEFINITION\r\n    // ====================\r\n\r\n    var Tab = function (element) {\r\n        this.element = $(element)\r\n    }\r\n\r\n    Tab.VERSION = '3.3.4'\r\n\r\n    Tab.TRANSITION_DURATION = 150\r\n\r\n    Tab.prototype.show = function () {\r\n        var $this    = this.element\r\n        var $ul      = $this.closest('ul:not(.dropdown-menu)')\r\n        var selector = $this.data('target')\r\n\r\n        if (!selector) {\r\n            selector = $this.attr('href')\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n        }\r\n\r\n        if ($this.parent('li').hasClass('active')) return\r\n\r\n        var $previous = $ul.find('.active:last a')\r\n        var hideEvent = $.Event('hide.bs.tab', {\r\n            relatedTarget: $this[0]\r\n        })\r\n        var showEvent = $.Event('show.bs.tab', {\r\n            relatedTarget: $previous[0]\r\n        })\r\n\r\n        $previous.trigger(hideEvent)\r\n        $this.trigger(showEvent)\r\n\r\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\r\n\r\n        var $target = $(selector)\r\n\r\n        this.activate($this.closest('li'), $ul)\r\n        this.activate($target, $target.parent(), function () {\r\n            $previous.trigger({\r\n                type: 'hidden.bs.tab',\r\n                relatedTarget: $this[0]\r\n            })\r\n            $this.trigger({\r\n                type: 'shown.bs.tab',\r\n                relatedTarget: $previous[0]\r\n            })\r\n        })\r\n    }\r\n\r\n    Tab.prototype.activate = function (element, container, callback) {\r\n        var $active    = container.find('> .active')\r\n        var transition = callback\r\n            && $.support.transition\r\n            && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\r\n\r\n        function next() {\r\n            $active\r\n                .removeClass('active')\r\n                .find('> .dropdown-menu > .active')\r\n                .removeClass('active')\r\n                .end()\r\n                .find('[data-toggle=\"tab\"]')\r\n                .attr('aria-expanded', false)\r\n\r\n            element\r\n                .addClass('active')\r\n                .find('[data-toggle=\"tab\"]')\r\n                .attr('aria-expanded', true)\r\n\r\n            if (transition) {\r\n                element[0].offsetWidth // reflow for transition\r\n                element.addClass('in')\r\n            } else {\r\n                element.removeClass('fade')\r\n            }\r\n\r\n            if (element.parent('.dropdown-menu').length) {\r\n                element\r\n                    .closest('li.dropdown')\r\n                    .addClass('active')\r\n                    .end()\r\n                    .find('[data-toggle=\"tab\"]')\r\n                    .attr('aria-expanded', true)\r\n            }\r\n\r\n            callback && callback()\r\n        }\r\n\r\n        $active.length && transition ?\r\n            $active\r\n                .one('bsTransitionEnd', next)\r\n                .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\r\n            next()\r\n\r\n        $active.removeClass('in')\r\n    }\r\n\r\n\r\n    // TAB PLUGIN DEFINITION\r\n    // =====================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this = $(this)\r\n            var data  = $this.data('bs.tab')\r\n\r\n            if (!data) $this.data('bs.tab', (data = new Tab(this)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.tab\r\n\r\n    $.fn.tab             = Plugin\r\n    $.fn.tab.Constructor = Tab\r\n\r\n\r\n    // TAB NO CONFLICT\r\n    // ===============\r\n\r\n    $.fn.tab.noConflict = function () {\r\n        $.fn.tab = old\r\n        return this\r\n    }\r\n\r\n\r\n    // TAB DATA-API\r\n    // ============\r\n\r\n    var clickHandler = function (e) {\r\n        e.preventDefault()\r\n        Plugin.call($(this), 'show')\r\n    }\r\n\r\n    $(document)\r\n        .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\r\n        .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: affix.js v3.3.4\r\n * http://getbootstrap.com/javascript/#affix\r\n * ========================================================================\r\n * Copyright 2011-2015 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n    'use strict';\r\n\r\n    // AFFIX CLASS DEFINITION\r\n    // ======================\r\n\r\n    var Affix = function (element, options) {\r\n        this.options = $.extend({}, Affix.DEFAULTS, options)\r\n\r\n        this.$target = $(this.options.target)\r\n            .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\r\n            .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\r\n\r\n        this.$element     = $(element)\r\n        this.affixed      = null\r\n        this.unpin        = null\r\n        this.pinnedOffset = null\r\n\r\n        this.checkPosition()\r\n    }\r\n\r\n    Affix.VERSION  = '3.3.4'\r\n\r\n    Affix.RESET    = 'affix affix-top affix-bottom'\r\n\r\n    Affix.DEFAULTS = {\r\n        offset: 0,\r\n        target: window\r\n    }\r\n\r\n    Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\r\n        var scrollTop    = this.$target.scrollTop()\r\n        var position     = this.$element.offset()\r\n        var targetHeight = this.$target.height()\r\n\r\n        if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\r\n\r\n        if (this.affixed == 'bottom') {\r\n            if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\r\n            return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\r\n        }\r\n\r\n        var initializing   = this.affixed == null\r\n        var colliderTop    = initializing ? scrollTop : position.top\r\n        var colliderHeight = initializing ? targetHeight : height\r\n\r\n        if (offsetTop != null && scrollTop <= offsetTop) return 'top'\r\n        if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\r\n\r\n        return false\r\n    }\r\n\r\n    Affix.prototype.getPinnedOffset = function () {\r\n        if (this.pinnedOffset) return this.pinnedOffset\r\n        this.$element.removeClass(Affix.RESET).addClass('affix')\r\n        var scrollTop = this.$target.scrollTop()\r\n        var position  = this.$element.offset()\r\n        return (this.pinnedOffset = position.top - scrollTop)\r\n    }\r\n\r\n    Affix.prototype.checkPositionWithEventLoop = function () {\r\n        setTimeout($.proxy(this.checkPosition, this), 1)\r\n    }\r\n\r\n    Affix.prototype.checkPosition = function () {\r\n        if (!this.$element.is(':visible')) return\r\n\r\n        var height       = this.$element.height()\r\n        var offset       = this.options.offset\r\n        var offsetTop    = offset.top\r\n        var offsetBottom = offset.bottom\r\n        var scrollHeight = $(document.body).height()\r\n\r\n        if (typeof offset != 'object')         offsetBottom = offsetTop = offset\r\n        if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\r\n        if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\r\n\r\n        var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\r\n\r\n        if (this.affixed != affix) {\r\n            if (this.unpin != null) this.$element.css('top', '')\r\n\r\n            var affixType = 'affix' + (affix ? '-' + affix : '')\r\n            var e         = $.Event(affixType + '.bs.affix')\r\n\r\n            this.$element.trigger(e)\r\n\r\n            if (e.isDefaultPrevented()) return\r\n\r\n            this.affixed = affix\r\n            this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\r\n\r\n            this.$element\r\n                .removeClass(Affix.RESET)\r\n                .addClass(affixType)\r\n                .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\r\n        }\r\n\r\n        if (affix == 'bottom') {\r\n            this.$element.offset({\r\n                top: scrollHeight - height - offsetBottom\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // AFFIX PLUGIN DEFINITION\r\n    // =======================\r\n\r\n    function Plugin(option) {\r\n        return this.each(function () {\r\n            var $this   = $(this)\r\n            var data    = $this.data('bs.affix')\r\n            var options = typeof option == 'object' && option\r\n\r\n            if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\r\n            if (typeof option == 'string') data[option]()\r\n        })\r\n    }\r\n\r\n    var old = $.fn.affix\r\n\r\n    $.fn.affix             = Plugin\r\n    $.fn.affix.Constructor = Affix\r\n\r\n\r\n    // AFFIX NO CONFLICT\r\n    // =================\r\n\r\n    $.fn.affix.noConflict = function () {\r\n        $.fn.affix = old\r\n        return this\r\n    }\r\n\r\n\r\n    // AFFIX DATA-API\r\n    // ==============\r\n\r\n    $(window).on('load', function () {\r\n        $('[data-spy=\"affix\"]').each(function () {\r\n            var $spy = $(this)\r\n            var data = $spy.data()\r\n\r\n            data.offset = data.offset || {}\r\n\r\n            if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\r\n            if (data.offsetTop    != null) data.offset.top    = data.offsetTop\r\n\r\n            Plugin.call($spy, data)\r\n        })\r\n    })\r\n\r\n}(jQuery);\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

eval("var Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(4),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\nComponent.options.__file = \"F:\\\\projects\\\\ewis\\\\resources\\\\assets\\\\js\\\\components\\\\Example.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key !== \"__esModule\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] Example.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-3a6f2fea\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-3a6f2fea\", Component.options)\n  }\n})()}\n\nmodule.exports = Component.exports\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9FeGFtcGxlLnZ1ZT9kZDRlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBDb21wb25lbnQgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9jb21wb25lbnQtbm9ybWFsaXplclwiKShcbiAgLyogc2NyaXB0ICovXG4gIHJlcXVpcmUoXCIhIWJ1YmxlLWxvYWRlcj97XFxcIm9iamVjdEFzc2lnblxcXCI6XFxcIk9iamVjdC5hc3NpZ25cXFwifSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0V4YW1wbGUudnVlXCIpLFxuICAvKiB0ZW1wbGF0ZSAqL1xuICByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXI/aWQ9ZGF0YS12LTNhNmYyZmVhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9FeGFtcGxlLnZ1ZVwiKSxcbiAgLyogc2NvcGVJZCAqL1xuICBudWxsLFxuICAvKiBjc3NNb2R1bGVzICovXG4gIG51bGxcbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwiRjpcXFxccHJvamVjdHNcXFxcZXdpc1xcXFxyZXNvdXJjZXNcXFxcYXNzZXRzXFxcXGpzXFxcXGNvbXBvbmVudHNcXFxcRXhhbXBsZS52dWVcIlxuaWYgKENvbXBvbmVudC5lc01vZHVsZSAmJiBPYmplY3Qua2V5cyhDb21wb25lbnQuZXNNb2R1bGUpLnNvbWUoZnVuY3Rpb24gKGtleSkge3JldHVybiBrZXkgIT09IFwiZGVmYXVsdFwiICYmIGtleSAhPT0gXCJfX2VzTW9kdWxlXCJ9KSkge2NvbnNvbGUuZXJyb3IoXCJuYW1lZCBleHBvcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluICoudnVlIGZpbGVzLlwiKX1cbmlmIChDb21wb25lbnQub3B0aW9ucy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWUtbG9hZGVyXSBFeGFtcGxlLnZ1ZTogZnVuY3Rpb25hbCBjb21wb25lbnRzIGFyZSBub3Qgc3VwcG9ydGVkIHdpdGggdGVtcGxhdGVzLCB0aGV5IHNob3VsZCB1c2UgcmVuZGVyIGZ1bmN0aW9ucy5cIil9XG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0zYTZmMmZlYVwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTNhNmYyZmVhXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9FeGFtcGxlLnZ1ZVxuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ exports[\"default\"] = {\n    mounted: function mounted() {\n        console.log('Component mounted.')\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2NvbXBvbmVudHMvRXhhbXBsZS52dWU/YmRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgbW91bnRlZCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0NvbXBvbmVudCBtb3VudGVkLicpXG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9FeGFtcGxlLnZ1ZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 3 */
/***/ function(module, exports) {

eval("module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanM/ZDRmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHJhd1NjcmlwdEV4cG9ydHMsXG4gIGNvbXBpbGVkVGVtcGxhdGUsXG4gIHNjb3BlSWQsXG4gIGNzc01vZHVsZXNcbikge1xuICB2YXIgZXNNb2R1bGVcbiAgdmFyIHNjcmlwdEV4cG9ydHMgPSByYXdTY3JpcHRFeHBvcnRzID0gcmF3U2NyaXB0RXhwb3J0cyB8fCB7fVxuXG4gIC8vIEVTNiBtb2R1bGVzIGludGVyb3BcbiAgdmFyIHR5cGUgPSB0eXBlb2YgcmF3U2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIGlmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZXNNb2R1bGUgPSByYXdTY3JpcHRFeHBvcnRzXG4gICAgc2NyaXB0RXhwb3J0cyA9IHJhd1NjcmlwdEV4cG9ydHMuZGVmYXVsdFxuICB9XG5cbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyByZW5kZXIgZnVuY3Rpb25zXG4gIGlmIChjb21waWxlZFRlbXBsYXRlKSB7XG4gICAgb3B0aW9ucy5yZW5kZXIgPSBjb21waWxlZFRlbXBsYXRlLnJlbmRlclxuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gY29tcGlsZWRUZW1wbGF0ZS5zdGF0aWNSZW5kZXJGbnNcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9IHNjb3BlSWRcbiAgfVxuXG4gIC8vIGluamVjdCBjc3NNb2R1bGVzXG4gIGlmIChjc3NNb2R1bGVzKSB7XG4gICAgdmFyIGNvbXB1dGVkID0gb3B0aW9ucy5jb21wdXRlZCB8fCAob3B0aW9ucy5jb21wdXRlZCA9IHt9KVxuICAgIE9iamVjdC5rZXlzKGNzc01vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgdmFyIG1vZHVsZSA9IGNzc01vZHVsZXNba2V5XVxuICAgICAgY29tcHV0ZWRba2V5XSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZSB9XG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXNNb2R1bGU6IGVzTW9kdWxlLFxuICAgIGV4cG9ydHM6IHNjcmlwdEV4cG9ydHMsXG4gICAgb3B0aW9uczogb3B0aW9uc1xuICB9XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vdnVlLWxvYWRlci9saWIvY29tcG9uZW50LW5vcm1hbGl6ZXIuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

eval("module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-md-8 col-md-offset-2\"\n  }, [_c('div', {\n    staticClass: \"panel panel-default\"\n  }, [_c('div', {\n    staticClass: \"panel-heading\"\n  }, [_vm._v(\"Example Component\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"panel-body\"\n  }, [_vm._v(\"\\n                    I'm an example component!\\n                \")])])])])])\n}]}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-3a6f2fea\", module.exports)\n  }\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9hc3NldHMvanMvY29tcG9uZW50cy9FeGFtcGxlLnZ1ZT8zMTNjIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPXtyZW5kZXI6ZnVuY3Rpb24gKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7XG4gIHJldHVybiBfdm0uX20oMClcbn0sc3RhdGljUmVuZGVyRm5zOiBbZnVuY3Rpb24gKCl7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7XG4gIHJldHVybiBfYygnZGl2Jywge1xuICAgIHN0YXRpY0NsYXNzOiBcImNvbnRhaW5lclwiXG4gIH0sIFtfYygnZGl2Jywge1xuICAgIHN0YXRpY0NsYXNzOiBcInJvd1wiXG4gIH0sIFtfYygnZGl2Jywge1xuICAgIHN0YXRpY0NsYXNzOiBcImNvbC1tZC04IGNvbC1tZC1vZmZzZXQtMlwiXG4gIH0sIFtfYygnZGl2Jywge1xuICAgIHN0YXRpY0NsYXNzOiBcInBhbmVsIHBhbmVsLWRlZmF1bHRcIlxuICB9LCBbX2MoJ2RpdicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJwYW5lbC1oZWFkaW5nXCJcbiAgfSwgW192bS5fdihcIkV4YW1wbGUgQ29tcG9uZW50XCIpXSksIF92bS5fdihcIiBcIiksIF9jKCdkaXYnLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwicGFuZWwtYm9keVwiXG4gIH0sIFtfdm0uX3YoXCJcXG4gICAgICAgICAgICAgICAgICAgIEknbSBhbiBleGFtcGxlIGNvbXBvbmVudCFcXG4gICAgICAgICAgICAgICAgXCIpXSldKV0pXSldKVxufV19XG5tb2R1bGUuZXhwb3J0cy5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKG1vZHVsZS5ob3QuZGF0YSkge1xuICAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpLnJlcmVuZGVyKFwiZGF0YS12LTNhNmYyZmVhXCIsIG1vZHVsZS5leHBvcnRzKVxuICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyLmpzP2lkPWRhdGEtdi0zYTZmMmZlYSEuL34vdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT10ZW1wbGF0ZSZpbmRleD0wIS4vcmVzb3VyY2VzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0V4YW1wbGUudnVlXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

eval("\r\n/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * include Vue and Vue Resource. This gives a great starting point for\r\n * building robust, powerful web applications using Vue and Laravel.\r\n */\r\n\r\n\r\n__webpack_require__(0);\r\n\r\n/**\r\n * Next, we will create a fresh Vue application instance and attach it to\r\n * the page. Then, you may begin adding components to this application\r\n * or customize the JavaScript scaffolding to fit your unique needs.\r\n */\r\n\r\nVue.component('example', __webpack_require__(1));\r\n\r\nvar app = new Vue({\r\n    el: '#app'\r\n});\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz84YjY3Il0sInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKipcclxuICogRmlyc3Qgd2Ugd2lsbCBsb2FkIGFsbCBvZiB0aGlzIHByb2plY3QncyBKYXZhU2NyaXB0IGRlcGVuZGVuY2llcyB3aGljaFxyXG4gKiBpbmNsdWRlIFZ1ZSBhbmQgVnVlIFJlc291cmNlLiBUaGlzIGdpdmVzIGEgZ3JlYXQgc3RhcnRpbmcgcG9pbnQgZm9yXHJcbiAqIGJ1aWxkaW5nIHJvYnVzdCwgcG93ZXJmdWwgd2ViIGFwcGxpY2F0aW9ucyB1c2luZyBWdWUgYW5kIExhcmF2ZWwuXHJcbiAqL1xyXG5cclxuXHJcbnJlcXVpcmUoJy4vYm9vdHN0cmFwJyk7XHJcblxyXG4vKipcclxuICogTmV4dCwgd2Ugd2lsbCBjcmVhdGUgYSBmcmVzaCBWdWUgYXBwbGljYXRpb24gaW5zdGFuY2UgYW5kIGF0dGFjaCBpdCB0b1xyXG4gKiB0aGUgcGFnZS4gVGhlbiwgeW91IG1heSBiZWdpbiBhZGRpbmcgY29tcG9uZW50cyB0byB0aGlzIGFwcGxpY2F0aW9uXHJcbiAqIG9yIGN1c3RvbWl6ZSB0aGUgSmF2YVNjcmlwdCBzY2FmZm9sZGluZyB0byBmaXQgeW91ciB1bmlxdWUgbmVlZHMuXHJcbiAqL1xyXG5cclxuVnVlLmNvbXBvbmVudCgnZXhhbXBsZScsIHJlcXVpcmUoJy4vY29tcG9uZW50cy9FeGFtcGxlLnZ1ZScpKTtcclxuXHJcbmNvbnN0IGFwcCA9IG5ldyBWdWUoe1xyXG4gICAgZWw6ICcjYXBwJ1xyXG59KTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvYXBwLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);